// ============================================================
// Prisma Schema - Sistema de Ventas con Productos Relacionados
// ============================================================

// Generador del cliente Prisma
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

// Fuente de datos (base de datos MongoDB)
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// =======================
// MODELOS PRINCIPALES
// =======================

model User {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  roll      Roll    @default(USER)
  email     String  @unique
  password  String
}

// -----------------------

model Product {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  status    Status            @default(Activo)
  category  String
  price     Float
  date      String
  ventas    VentaProducto[]   // Relación con ventas
}

// -----------------------

model Venta {
  id            String           @id @default(auto()) @map("_id") @db.ObjectId
  ventaId       String           @unique
  total         Float
  paymentMethod PaymentMethod
  date          DateTime
  tip           Float
  productos     VentaProducto[]  // Relación con productos vendidos
}

// -----------------------
// Tabla intermedia (relación muchos a muchos)
// -----------------------

model VentaProducto {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  venta        Venta    @relation(fields: [ventaId], references: [id])
  ventaId      String   @db.ObjectId
  producto     Product  @relation(fields: [productoId], references: [id])
  productoId   String   @db.ObjectId
  cantidad     Int
  precioUnit   Float
}

// =======================
// ENUMS
// =======================

enum Status {
  Activo
  Inactivo
}

enum Roll {
  USER
  ADMIN
}

enum PaymentMethod {
  Efectivo
  Tarjeta
  Delivery
}

enum DeliveryStore {
  Rappy
  Didi
  Uber
}
